{"version":3,"sources":["../../../../src/components/fb-quote/fb-quote.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,sCAAuE;IACvE,oDAAiE;IAEjE;;;;;;;;;;;OAWG;IAEH;QAAsC,oCAAa;QAiBjD,0BACE,EAAc,EACd,GAAa;mBAEb,kBAAM,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC;QAC5B,CAAC;QAiBH,uBAAC;IAAD,CAvCA,AAuCC,CAvCqC,8BAAa;IAwB5C,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,EAAE;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAU,GAAG;QACpB,EAAC,IAAI,EAAE,eAAQ,GAAG;KACjB,EAH6F,CAG7F,CAAC;IACK,+BAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC1B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;KAC3B,CAAC;IA9BA;QADC,8BAAa;;kDACD;IAOb;QADC,8BAAa;;oDACC;IAfJ,4CAAgB","file":"fb-quote.js","sourceRoot":"","sourcesContent":["import { Component, Input, ElementRef, Renderer } from '@angular/core';\r\nimport { FBMLAttribute, FBMLComponent } from '../fbml-component';\r\n\r\n/**\r\n * @name Quote Plugin\r\n * @shortdesc Quote plugin component\r\n * @fbdoc https://developers.facebook.com/docs/plugins/quote\r\n * @description\r\n * The quote plugin lets people select text on your page and add it to their share, so they can tell a more expressive story.\r\n * Note that you do not need to implement Facebook login or request any additional permissions through app review in order to use this plugin.\r\n * @usage\r\n * ```html\r\n * <fb-quote></fb-quote>\r\n * ```\r\n */\r\n\r\nexport class FBQuoteComponent extends FBMLComponent {\r\n\r\n  /**\r\n   * The absolute URL of the page that will be quoted.\r\n   * Defaults to the current URL\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  href: string;\r\n\r\n  /**\r\n   * Can be set to quote or button. Defaults to quote.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  layout: string;\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    rnd: Renderer\r\n  ) {\r\n    super(el, rnd, 'fb-quote');\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'fb-quote',\r\n  template: ''\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'href': [{ type: Input },],\n'layout': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}