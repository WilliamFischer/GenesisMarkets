{"version":3,"sources":["../../../../src/components/fb-follow/fb-follow.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,sCAAuE;IACvE,oDAAiE;IAEjE;;;;;;;;;OASG;IAEH;QAAuC,qCAAa;QAoDlD,2BACE,EAAc,EACd,GAAa;mBAEb,kBAAM,EAAE,EAAE,GAAG,EAAE,WAAW,CAAC;QAC7B,CAAC;QAsBH,wBAAC;IAAD,CA/EA,AA+EC,CA/EsC,8BAAa;IA2D7C,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,EAAE;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAU,GAAG;QACpB,EAAC,IAAI,EAAE,eAAQ,GAAG;KACjB,EAH6F,CAG7F,CAAC;IACK,gCAAc,GAA2C;QAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACjC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC1B,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACrC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC5B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC/B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;KAC1B,CAAC;IAvEA;QADC,8BAAa;;0DACM;IAOpB;QADC,8BAAa;;mDACD;IAOb;QADC,8BAAa;;8DACW;IAQzB;QADC,8BAAa;;qDACC;IAOf;QADC,8BAAa;;wDACI;IAOlB;QADC,8BAAa;;mDACD;IAOb;QADC,8BAAa;;oDACA;IAlDH,8CAAiB","file":"fb-follow.js","sourceRoot":"","sourcesContent":["import { Component, Input, ElementRef, Renderer } from '@angular/core';\r\nimport { FBMLAttribute, FBMLComponent } from '../fbml-component';\r\n\r\n/**\r\n * @name Follow Button\r\n * @shortdesc Follow button component\r\n * @fbdoc https://developers.facebook.com/docs/plugins/follow-button\r\n * @description The Follow button lets people subscribe to the public updates of others on Facebook.\r\n * @usage\r\n * ```html\r\n * <fb-follow href=\"https://www.facebook.com/zuck\"></fb-follow>\r\n * ```\r\n */\r\n\r\nexport class FBFollowComponent extends FBMLComponent {\r\n\r\n  /**\r\n   * The color scheme used by the plugin. Can be `light` or `dark`. Defaults to `light`.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  colorScheme: string;\r\n\r\n  /**\r\n   * The Facebook.com profile URL of the user to follow.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  href: string;\r\n\r\n  /**\r\n   * If your web site or online service, or a portion of your service, is directed to children under 13 you must enable this. Defaults to `false`.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  kidDirectedSite: boolean;\r\n\r\n  /**\r\n   * Selects one of the different layouts that are available for the plugin. Can be one of `standard`, `button_count`, or `box_count`.\r\n   * Defaults to `standard`.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  layout: string;\r\n\r\n  /**\r\n   * Specifies whether to display profile photos below the button. Defaults to `false`.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  showFaces: string;\r\n\r\n  /**\r\n   * The button is offered in 2 sizes i.e. `large` and `small`. Defaults to `small`.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  size: string;\r\n\r\n  /**\r\n   * The width of the plugin. The layout you choose affects the minimum and default widths you can use.\r\n   */\r\n  \r\n  @FBMLAttribute\r\n  width: string;\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    rnd: Renderer\r\n  ) {\r\n    super(el, rnd, 'fb-follow');\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'fb-follow',\r\n  template: ''\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'colorScheme': [{ type: Input },],\n'href': [{ type: Input },],\n'kidDirectedSite': [{ type: Input },],\n'layout': [{ type: Input },],\n'showFaces': [{ type: Input },],\n'size': [{ type: Input },],\n'width': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}